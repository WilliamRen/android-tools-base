<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="fcecc8b7-6287-4596-864b-d28df64488e9" name="Default" comment="" />
    <ignored path="adt.iws" />
    <ignored path=".idea/workspace.xml" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager" flattened_view="true" show_ignored="false" />
  <component name="CreatePatchCommitExecutor">
    <option name="PATCH_PATH" value="" />
  </component>
  <component name="DaemonCodeAnalyzer">
    <disable_hints />
  </component>
  <component name="DebuggerManager">
    <breakpoint_any default_suspend_policy="SuspendAll" default_condition_enabled="true" converted="true">
      <breakpoint>
        <option name="NOTIFY_CAUGHT" value="true" />
        <option name="NOTIFY_UNCAUGHT" value="true" />
        <option name="ENABLED" value="false" />
        <option name="LOG_ENABLED" value="false" />
        <option name="LOG_EXPRESSION_ENABLED" value="false" />
        <option name="REMOVE_AFTER_HIT" value="false" />
        <option name="SUSPEND_POLICY" value="SuspendAll" />
        <option name="SUSPEND" value="true" />
        <option name="COUNT_FILTER_ENABLED" value="false" />
        <option name="COUNT_FILTER" value="0" />
        <option name="CONDITION_ENABLED" value="true" />
        <option name="CLASS_FILTERS_ENABLED" value="false" />
        <option name="INSTANCE_FILTERS_ENABLED" value="false" />
        <option name="CONDITION" value="" />
        <option name="LOG_MESSAGE" value="" />
      </breakpoint>
      <breakpoint>
        <option name="NOTIFY_CAUGHT" value="true" />
        <option name="NOTIFY_UNCAUGHT" value="true" />
        <option name="ENABLED" value="false" />
        <option name="LOG_ENABLED" value="false" />
        <option name="LOG_EXPRESSION_ENABLED" value="false" />
        <option name="REMOVE_AFTER_HIT" value="false" />
        <option name="SUSPEND_POLICY" value="SuspendAll" />
        <option name="SUSPEND" value="true" />
        <option name="COUNT_FILTER_ENABLED" value="false" />
        <option name="COUNT_FILTER" value="0" />
        <option name="CONDITION_ENABLED" value="true" />
        <option name="CLASS_FILTERS_ENABLED" value="false" />
        <option name="INSTANCE_FILTERS_ENABLED" value="false" />
        <option name="CONDITION" value="" />
        <option name="LOG_MESSAGE" value="" />
      </breakpoint>
    </breakpoint_any>
    <ui_properties default_suspend_policy="SuspendAll" default_condition_enabled="true" converted="true" />
    <breakpoint_rules converted="true" />
    <ui_properties converted="true" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="default_target" />
  <component name="FavoritesManager">
    <favorites_list name="adt" />
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file leaf-file-name="ProductFlavorImpl.java" pinned="false" current="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/model/ProductFlavorImpl.java">
          <provider selected="true" editor-type-id="text-editor">
            <state vertical-scroll-proportion="0.0" vertical-offset="686" max-vertical-offset="2934">
              <caret line="74" column="108" selection-start-line="74" selection-start-column="95" selection-end-line="74" selection-end-column="95" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="VariantConfiguration.java" pinned="false" current="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/build-system/builder/src/main/java/com/android/builder/VariantConfiguration.java">
          <provider selected="true" editor-type-id="text-editor">
            <state vertical-scroll-proportion="0.0" vertical-offset="14121" max-vertical-offset="27324">
              <caret line="875" column="21" selection-start-line="875" selection-start-column="21" selection-end-line="875" selection-end-column="21" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="SimpleTestCallable.java" pinned="false" current="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/build-system/builder/src/main/java/com/android/builder/internal/testing/SimpleTestCallable.java">
          <provider selected="true" editor-type-id="text-editor">
            <state vertical-scroll-proportion="0.0" vertical-offset="1414" max-vertical-offset="2826">
              <caret line="118" column="0" selection-start-line="118" selection-start-column="0" selection-end-line="118" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="RemoteAndroidTestRunner.java" pinned="false" current="true" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/ddmlib/src/main/java/com/android/ddmlib/testrunner/RemoteAndroidTestRunner.java">
          <provider selected="true" editor-type-id="text-editor">
            <state vertical-scroll-proportion="0.33208954" vertical-offset="2720" max-vertical-offset="4068">
              <caret line="213" column="42" selection-start-line="213" selection-start-column="42" selection-end-line="213" selection-end-column="42" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="AndroidProjectTest.java" pinned="false" current="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/build-system/gradle-model/src/test/java/com/android/build/gradle/model/AndroidProjectTest.java">
          <provider selected="true" editor-type-id="text-editor">
            <state vertical-scroll-proportion="0.0" vertical-offset="7507" max-vertical-offset="23742">
              <caret line="483" column="23" selection-start-line="483" selection-start-column="23" selection-end-line="483" selection-end-column="23" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="FakeDevice.java" pinned="false" current="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/build-system/tests/3rdPartyTests/buildSrc/src/main/java/com/android/tests/basic/buildscript/FakeDevice.java">
          <provider selected="true" editor-type-id="text-editor">
            <state vertical-scroll-proportion="-38.08" vertical-offset="344" max-vertical-offset="2106">
              <caret line="90" column="8" selection-start-line="90" selection-start-column="8" selection-end-line="90" selection-end-column="8" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="DefaultProductFlavorTest.java" pinned="false" current="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/build-system/builder/src/test/java/com/android/builder/DefaultProductFlavorTest.java">
          <provider selected="true" editor-type-id="text-editor">
            <state vertical-scroll-proportion="0.0" vertical-offset="632" max-vertical-offset="1746">
              <caret line="65" column="57" selection-start-line="65" selection-start-column="57" selection-end-line="65" selection-end-column="57" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="ProductFlavor.java" pinned="false" current="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/build-system/builder-model/src/main/java/com/android/builder/model/ProductFlavor.java">
          <provider selected="true" editor-type-id="text-editor">
            <state vertical-scroll-proportion="0.0" vertical-offset="1748" max-vertical-offset="2754">
              <caret line="127" column="124" selection-start-line="127" selection-start-column="0" selection-end-line="127" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="DefaultProductFlavor.java" pinned="false" current="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/build-system/builder/src/main/java/com/android/builder/DefaultProductFlavor.java">
          <provider selected="true" editor-type-id="text-editor">
            <state vertical-scroll-proportion="0.0" vertical-offset="362" max-vertical-offset="6804">
              <caret line="54" column="34" selection-start-line="54" selection-start-column="0" selection-end-line="54" selection-end-column="0" />
              <folding>
                <element signature="e#9241#9257#0" expanded="true" />
                <element signature="e#10115#10116#0" expanded="true" />
                <element signature="e#10170#10171#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindManager">
    <FindUsagesManager>
      <setting name="OPEN_NEW_TAB" value="false" />
    </FindUsagesManager>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GradleLocalSettings">
    <option name="tasksExpandState">
      <map>
        <entry key="" value="true" />
      </map>
    </option>
    <option name="availableProjects">
      <map>
        <entry>
          <key>
            <ExternalProjectPojo>
              <option name="name" value="base" />
              <option name="path" value="$PROJECT_DIR$" />
            </ExternalProjectPojo>
          </key>
          <value>
            <list>
              <ExternalProjectPojo>
                <option name="name" value=":manifest-merger" />
                <option name="path" value="$PROJECT_DIR$/build-system/manifest-merger" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":common" />
                <option name="path" value="$PROJECT_DIR$/common" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":ddmlib" />
                <option name="path" value="$PROJECT_DIR$/ddmlib" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":dvlib" />
                <option name="path" value="$PROJECT_DIR$/device_validator/dvlib" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":sdklib" />
                <option name="path" value="$PROJECT_DIR$/sdklib" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":builder-test-api" />
                <option name="path" value="$PROJECT_DIR$/build-system/builder-test-api" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":jobb" />
                <option name="path" value="$PROJECT_DIR$/jobb" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":archquery" />
                <option name="path" value="$PROJECT_DIR$/legacy/archquery" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":screenshot2" />
                <option name="path" value="$PROJECT_DIR$/misc/screenshot2" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":draw9patch" />
                <option name="path" value="$PROJECT_DIR$/draw9patch" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":gradle-import" />
                <option name="path" value="$PROJECT_DIR$/gradle-import" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":lint-checks" />
                <option name="path" value="$PROJECT_DIR$/lint/libs/lint-checks" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":asset-studio" />
                <option name="path" value="$PROJECT_DIR$/asset-studio" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":builder-model" />
                <option name="path" value="$PROJECT_DIR$/build-system/builder-model" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":sdk-common" />
                <option name="path" value="$PROJECT_DIR$/sdk-common" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":sdklib-test" />
                <option name="path" value="$PROJECT_DIR$/sdklib" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":builder" />
                <option name="path" value="$PROJECT_DIR$/build-system/builder" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":ant-tasks" />
                <option name="path" value="$PROJECT_DIR$/legacy/ant-tasks" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":testutils" />
                <option name="path" value="$PROJECT_DIR$/testutils" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":layoutlib-api" />
                <option name="path" value="$PROJECT_DIR$/layoutlib-api" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":ninepatch" />
                <option name="path" value="$PROJECT_DIR$/ninepatch" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":fat32lib" />
                <option name="path" value="$PROJECT_DIR$/../external/fat32lib" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value="base" />
                <option name="path" value="$PROJECT_DIR$" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":gradle-model" />
                <option name="path" value="$PROJECT_DIR$/build-system/gradle-model" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":gradle" />
                <option name="path" value="$PROJECT_DIR$/build-system/gradle" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":rule-api" />
                <option name="path" value="$PROJECT_DIR$/rule-api" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":lint-api" />
                <option name="path" value="$PROJECT_DIR$/lint/libs/lint-api" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":lint" />
                <option name="path" value="$PROJECT_DIR$/lint/cli" />
              </ExternalProjectPojo>
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="availableTasks">
      <map>
        <entry key="$PROJECT_DIR$">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'buildTest:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="processBuildTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="aggregateResults" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':dvlib:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="gatherNotices" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="javadocJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for buildTest classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="findbugsBuildTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'buildTest'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="buildTestClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="copyGradleProperty" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="publishLocal" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="sourcesJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':builder:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'deviceTest:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="processDeviceTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles the deviceTest Groovy source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="compileDeviceTestGroovy" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for deviceTest classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="findbugsDeviceTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':common:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="downloadArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':manifest-merger:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Groovydoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="groovydoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="copyXsd" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':sdklib:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':builder-test-api:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the project build tests. This requires an SDK either from the Android source tree, under out/..., or an env var ANDROID_HOME." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="buildTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the device tests. This requires a device." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="deviceTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':lint:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Installs the 'archives' artifacts into the local Maven repository." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="install" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="signArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':gradle:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'buildTest:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="compileBuildTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'deviceTest:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="compileDeviceTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':layoutlib-api:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':sdk-common:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles the buildTest Groovy source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="compileBuildTestGroovy" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':builder-model:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="setupGradleInIde" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'deviceTest'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="deviceTestClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles the test Groovy source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="compileTestGroovy" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':ddmlib:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':lint-api:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="prepareRepo" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles the main Groovy source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="compileGroovy" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':lint-checks:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/asset-studio">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/asset-studio" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/build-system/builder">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Installs the 'archives' artifacts into the local Maven repository." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="install" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="javadocJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="publishLocal" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="signArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="sourcesJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':builder:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/build-system/builder-model">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Installs the 'archives' artifacts into the local Maven repository." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="install" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="javadocJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="publishLocal" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="signArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="sourcesJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':builder-model:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-model" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/build-system/builder-test-api">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Installs the 'archives' artifacts into the local Maven repository." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="install" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="javadocJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="publishLocal" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="signArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="sourcesJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':builder-test-api:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/builder-test-api" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/build-system/gradle">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the project build tests. This requires an SDK either from the Android source tree, under out/..., or an env var ANDROID_HOME." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="buildTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'buildTest'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="buildTestClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles the buildTest Groovy source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="compileBuildTestGroovy" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'buildTest:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="compileBuildTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles the deviceTest Groovy source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="compileDeviceTestGroovy" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'deviceTest:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="compileDeviceTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles the main Groovy source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="compileGroovy" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles the test Groovy source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="compileTestGroovy" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the device tests. This requires a device." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="deviceTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'deviceTest'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="deviceTestClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for buildTest classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="findbugsBuildTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for deviceTest classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="findbugsDeviceTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Groovydoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="groovydoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Installs the 'archives' artifacts into the local Maven repository." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="install" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="javadocJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'buildTest:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="processBuildTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'deviceTest:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="processDeviceTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="publishLocal" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="signArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="sourcesJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':gradle:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/build-system/gradle-model">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/gradle-model" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/build-system/manifest-merger">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Installs the 'archives' artifacts into the local Maven repository." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="install" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="javadocJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="publishLocal" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="signArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="sourcesJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':manifest-merger:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/build-system/manifest-merger" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/common">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Installs the 'archives' artifacts into the local Maven repository." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="install" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="javadocJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="publishLocal" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="signArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="sourcesJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':common:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/common" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/ddmlib">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Installs the 'archives' artifacts into the local Maven repository." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="install" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="javadocJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="publishLocal" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="signArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="sourcesJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':ddmlib:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ddmlib" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/device_validator/dvlib">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Installs the 'archives' artifacts into the local Maven repository." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="install" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="javadocJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="publishLocal" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="signArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="sourcesJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':dvlib:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/device_validator/dvlib" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/draw9patch">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/draw9patch" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/gradle-import">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/gradle-import" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/jobb">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/jobb" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/layoutlib-api">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Installs the 'archives' artifacts into the local Maven repository." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="install" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="javadocJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="publishLocal" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="signArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="sourcesJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':layoutlib-api:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/layoutlib-api" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/legacy/ant-tasks">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/ant-tasks" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/legacy/archquery">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/legacy/archquery" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/lint/cli">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Installs the 'archives' artifacts into the local Maven repository." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="install" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="javadocJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="publishLocal" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="signArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="sourcesJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':lint:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/cli" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/lint/libs/lint-api">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Installs the 'archives' artifacts into the local Maven repository." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="install" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="javadocJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="publishLocal" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="signArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="sourcesJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':lint-api:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-api" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/lint/libs/lint-checks">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Installs the 'archives' artifacts into the local Maven repository." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="install" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="javadocJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="publishLocal" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="signArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="sourcesJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':lint-checks:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/misc/screenshot2">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/misc/screenshot2" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/ninepatch">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/ninepatch" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/rule-api">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/rule-api" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/sdk-common">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Installs the 'archives' artifacts into the local Maven repository." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="install" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="javadocJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="publishLocal" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="signArchives" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="sourcesJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Uploads all artifacts belonging to configuration ':sdk-common:archives'" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdk-common" />
                <option name="name" value="uploadArchives" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/sdklib">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Installs the 'archives' artifacts into the local Maven repository." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="install" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="publishLocal" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/sdklib" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/testutils">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/testutils" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../external/fat32lib">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="buildDistributionJar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'main'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Clone dependencies" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="cloneArtifacts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'main:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles Java source 'test:java'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="copyDependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="copyLauncherScripts" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="disableTestFailures" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for main classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="findbugsMain" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Run FindBugs analysis for test classes" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="findbugsTest" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Installs the 'archives' artifacts into the local Maven repository." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="install" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'main:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes resources 'test:resources'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Push the distribution artifacts into the prebuilt folder" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="pushDistribution" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="setupMaven" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles classes 'test'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../external/fat32lib" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="modificationStamps">
      <map>
        <entry key="$PROJECT_DIR$" value="48794899961610" />
      </map>
    </option>
    <option name="projectBuildClasspath">
      <map>
        <entry key="$PROJECT_DIR$">
          <value>
            <ExternalProjectBuildClasspathPojo>
              <option name="modulesBuildClasspath">
                <map>
                  <entry key="$PROJECT_DIR$">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/asset-studio">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/asset-studio" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/build-system/builder">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/build-system/builder" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/build-system/builder-model">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/build-system/builder-model" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/build-system/builder-test-api">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/build-system/builder-test-api" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/build-system/gradle">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/build-system/gradle" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/build-system/gradle-model">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/build-system/gradle-model" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/build-system/manifest-merger">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/build-system/manifest-merger" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/common">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/common" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/ddmlib">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/ddmlib" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/device_validator/dvlib">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/device_validator/dvlib" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/draw9patch">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/draw9patch" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/gradle-import">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/gradle-import" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/jobb">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/jobb" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/layoutlib-api">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/layoutlib-api" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/legacy/ant-tasks">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/legacy/ant-tasks" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/legacy/archquery">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/legacy/archquery" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/lint/cli">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/lint/cli" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/lint/libs/lint-api">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/lint/libs/lint-api" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/lint/libs/lint-checks">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/lint/libs/lint-checks" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/misc/screenshot2">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/misc/screenshot2" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/ninepatch">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/ninepatch" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/rule-api">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/rule-api" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/sdk-common">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/sdk-common" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/sdklib">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/sdklib" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/testutils">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/testutils" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/../external/fat32lib">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="entries">
                          <list>
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/android/tools/internal/internal-plugins/1.1/internal-plugins-1.1.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar" />
                            <option value="$PROJECT_DIR$/../../prebuilts/tools/common/gradle-plugins/repository/com/google/guava/guava/14.0/guava-14.0.jar" />
                          </list>
                        </option>
                        <option name="path" value="$PROJECT_DIR$/../external/fat32lib" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                </map>
              </option>
              <option name="name" value="manifest-merger" />
              <option name="projectBuildClasspath">
                <list>
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/gradle-messaging-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/gradle-docs-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/gradle-wrapper-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/gradle-launcher-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/groovy-all-1.8.6.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/gradle-tooling-api-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/gradle-native-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/ivy-2.2.0.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/gradle-core-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/gradle-base-services-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/gradle-ui-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/gradle-resources-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/ant-launcher-1.9.2.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/gradle-base-services-groovy-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/gradle-cli-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/gradle-open-api-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/ant-1.9.2.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/ant-antlr-1.9.2.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-antlr-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-language-base-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-jetty-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-plugins-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-scala-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-ide-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-code-quality-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-javascript-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-language-jvm-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-jacoco-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-build-init-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-announce-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-core-impl-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-maven-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-cpp-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-ear-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-ivy-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-osgi-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-reporting-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-signing-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-build-comparison-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-publish-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-diagnostics-1.11.jar" />
                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/plugins/gradle-sonar-1.11.jar" />
                  <option value="$PROJECT_DIR$/buildSrc/src/main/java" />
                  <option value="$PROJECT_DIR$/buildSrc/src/main/groovy" />
                </list>
              </option>
            </ExternalProjectBuildClasspathPojo>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="IdeDocumentHistory">
    <option name="changedFiles">
      <list>
        <option value="$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/variant/TestVariantData.java" />
        <option value="$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/model/VariantImpl.java" />
        <option value="$PROJECT_DIR$/legacy/ant-tasks/src/main/java/com/android/ant/DexExecTask.java" />
        <option value="$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/variant/BaseVariantData.java" />
        <option value="$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/tasks/DeviceProviderInstrumentTestTask.groovy" />
        <option value="$PROJECT_DIR$/build-system/builder/src/test/java/com/android/builder/DefaultProductFlavorTest.java" />
        <option value="$PROJECT_DIR$/build-system/builder/src/main/java/com/android/builder/DefaultProductFlavor.java" />
        <option value="$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/model/ProductFlavorImpl.java" />
        <option value="$PROJECT_DIR$/build-system/builder/src/main/java/com/android/builder/VariantConfiguration.java" />
        <option value="$PROJECT_DIR$/ddmlib/src/main/java/com/android/ddmlib/testrunner/RemoteAndroidTestRunner.java" />
        <option value="$PROJECT_DIR$/build-system/builder/src/main/java/com/android/builder/internal/testing/SimpleTestCallable.java" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds">
    <option name="width" value="1920" />
    <option name="height" value="1061" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <OptionsSetting value="true" id="Add" />
    <OptionsSetting value="true" id="Remove" />
    <OptionsSetting value="true" id="Checkout" />
    <OptionsSetting value="true" id="Update" />
    <OptionsSetting value="true" id="Status" />
    <OptionsSetting value="true" id="Edit" />
    <ConfirmationsSetting value="0" id="Add" />
    <ConfirmationsSetting value="0" id="Remove" />
  </component>
  <component name="ProjectReloadState">
    <option name="STATE" value="0" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="base" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="base" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="base" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
        </subPane>
      </pane>
      <pane id="PackagesPane" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="GoToClass.includeLibraries" value="false" />
    <property name="GoToClass.toSaveIncludeLibraries" value="false" />
    <property name="GoToFile.includeJavaFiles" value="false" />
    <property name="MemberChooser.sorted" value="false" />
    <property name="MemberChooser.showClasses" value="true" />
    <property name="MemberChooser.copyJavadoc" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="OverrideImplement.combined" value="true" />
    <property name="OverrideImplement.overriding.sorted" value="false" />
    <property name="options.splitter.main.proportions" value="0.3" />
    <property name="options.splitter.details.proportions" value="0.2" />
    <property name="options.searchVisible" value="true" />
    <property name="recentsLimit" value="5" />
    <property name="dynamic.classpath" value="false" />
  </component>
  <component name="RunManager" selected="JUnit.DefaultProductFlavorTest.testMergeOnCustom">
    <configuration default="false" name="DefaultProductFlavorTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="builder" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" value="com.android.builder" />
      <option name="MAIN_CLASS_NAME" value="com.android.builder.DefaultProductFlavorTest" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="moduleWithDependencies" />
      </option>
      <envs />
      <patterns />
      <RunnerSettings RunnerId="Run" />
      <ConfigurationWrapper RunnerId="Run" />
      <method />
    </configuration>
    <configuration default="false" name="DefaultProductFlavorTest.testMergeOnCustom" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="builder" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" value="com.android.builder" />
      <option name="MAIN_CLASS_NAME" value="com.android.builder.DefaultProductFlavorTest" />
      <option name="METHOD_NAME" value="testMergeOnCustom" />
      <option name="TEST_OBJECT" value="method" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="moduleWithDependencies" />
      </option>
      <envs />
      <patterns />
      <RunnerSettings RunnerId="Run" />
      <ConfigurationWrapper RunnerId="Run" />
      <method />
    </configuration>
    <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" factoryName="Plugin">
      <module name="" />
      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
      <option name="PROGRAM_PARAMETERS" />
      <method />
    </configuration>
    <configuration default="true" type="AndroidTestRunConfigurationType" factoryName="Android Tests">
      <module name="" />
      <option name="TESTING_TYPE" value="0" />
      <option name="INSTRUMENTATION_RUNNER_CLASS" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="PACKAGE_NAME" value="" />
      <option name="TARGET_SELECTION_MODE" value="EMULATOR" />
      <option name="USE_LAST_SELECTED_DEVICE" value="false" />
      <option name="PREFERRED_AVD" value="" />
      <option name="USE_COMMAND_LINE" value="true" />
      <option name="COMMAND_LINE" value="" />
      <option name="WIPE_USER_DATA" value="false" />
      <option name="DISABLE_BOOT_ANIMATION" value="false" />
      <option name="NETWORK_SPEED" value="full" />
      <option name="NETWORK_LATENCY" value="none" />
      <option name="CLEAR_LOGCAT" value="false" />
      <option name="SHOW_LOGCAT_AUTOMATICALLY" value="true" />
      <option name="FILTER_LOGCAT_AUTOMATICALLY" value="true" />
      <method />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
      <method />
    </configuration>
    <configuration default="true" type="Specs2RunConfiguration" factoryName="Specs2">
      <module name="" />
      <setting name="path" value="" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="" />
      <setting name="testKind" value="Class" />
      <setting name="showProgressMessages" value="true" />
      <method />
    </configuration>
    <configuration default="true" type="Applet" factoryName="Applet">
      <module name="" />
      <option name="MAIN_CLASS_NAME" />
      <option name="HTML_FILE_NAME" />
      <option name="HTML_USED" value="false" />
      <option name="WIDTH" value="400" />
      <option name="HEIGHT" value="300" />
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <option name="VM_PARAMETERS" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <method />
    </configuration>
    <configuration default="true" type="TestNG" factoryName="TestNG">
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="ANNOTATION_TYPE" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="moduleWithDependencies" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <envs />
      <properties />
      <listeners />
      <method />
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="ENABLE_SWING_INSPECTOR" value="false" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="moduleWithDependencies" />
      </option>
      <envs />
      <patterns />
      <method />
    </configuration>
    <configuration default="true" type="AndroidRunConfigurationType" factoryName="Android Application">
      <module name="" />
      <option name="ACTIVITY_CLASS" value="" />
      <option name="MODE" value="default_activity" />
      <option name="DEPLOY" value="true" />
      <option name="ARTIFACT_NAME" value="" />
      <option name="TARGET_SELECTION_MODE" value="EMULATOR" />
      <option name="USE_LAST_SELECTED_DEVICE" value="false" />
      <option name="PREFERRED_AVD" value="" />
      <option name="USE_COMMAND_LINE" value="true" />
      <option name="COMMAND_LINE" value="" />
      <option name="WIPE_USER_DATA" value="false" />
      <option name="DISABLE_BOOT_ANIMATION" value="false" />
      <option name="NETWORK_SPEED" value="full" />
      <option name="NETWORK_LATENCY" value="none" />
      <option name="CLEAR_LOGCAT" value="false" />
      <option name="SHOW_LOGCAT_AUTOMATICALLY" value="true" />
      <option name="FILTER_LOGCAT_AUTOMATICALLY" value="true" />
      <method />
    </configuration>
    <configuration default="true" type="ScalaTestRunConfiguration" factoryName="ScalaTest">
      <module name="" />
      <setting name="path" value="" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="" />
      <setting name="testKind" value="Class" />
      <setting name="showProgressMessages" value="true" />
      <method />
    </configuration>
    <list size="2">
      <item index="0" class="java.lang.String" itemvalue="JUnit.DefaultProductFlavorTest" />
      <item index="1" class="java.lang.String" itemvalue="JUnit.DefaultProductFlavorTest.testMergeOnCustom" />
    </list>
    <recent_temporary>
      <list size="2">
        <item index="0" class="java.lang.String" itemvalue="JUnit.DefaultProductFlavorTest.testMergeOnCustom" />
        <item index="1" class="java.lang.String" itemvalue="JUnit.DefaultProductFlavorTest" />
      </list>
    </recent_temporary>
    <configuration name="&lt;template&gt;" type="WebApp" default="true" selected="false">
      <Host>localhost</Host>
      <Port>5050</Port>
    </configuration>
  </component>
  <component name="ShelveChangesManager" show_recycled="false" />
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="fcecc8b7-6287-4596-864b-d28df64488e9" name="Default" comment="" />
      <created>1394017779302</created>
      <updated>1394017779302</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="0" width="1920" height="1061" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info id="Palette&#9;" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Designer" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.32899022" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="SBT Console" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Kotlin" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32899022" sideWeight="0.5" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32899022" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Gradle" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" weight="0.4" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Application Servers" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.105347596" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32899022" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="3" side_tool="false" content_ui="combo" />
    </layout>
    <layout-to-restore>
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Palette&#9;" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Designer" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.32911393" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="SBT Console" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="3" side_tool="true" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="10" side_tool="true" content_ui="tabs" />
      <window_info id="Kotlin" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="11" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Application Servers" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="12" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.24973261" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
    </layout-to-restore>
  </component>
  <component name="Vcs.Log.UiProperties">
    <option name="RECENTLY_FILTERED_USER_GROUPS">
      <collection />
    </option>
    <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
      <collection />
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="myTodoPanelSettings">
      <TodoPanelSettings />
    </option>
    <option name="SHOW_VCS_ERROR_NOTIFICATIONS" value="false" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager />
  </component>
  <component name="antWorkspaceConfiguration">
    <option name="IS_AUTOSCROLL_TO_SOURCE" value="false" />
    <option name="FILTER_TARGETS" value="false" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/model/BuildTypeImpl.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/api/TestVariantImpl.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/variant/TestedVariantData.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/tasks/PackageApplication.groovy">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/tasks/PrepareDependenciesTask.groovy">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/builder/src/main/java/com/android/builder/dependency/JarDependency.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/base.gradle">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/tasks/Dex.groovy">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/api/AndroidSourceSet.groovy">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/model/BaseArtifactImpl.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/model/AndroidArtifactImpl.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/model/ModelBuilder.groovy">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/builder/src/main/java/com/android/builder/dependency/LibraryDependency.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$PROJECT_DIR$/../../prebuilts/tools/common/m2/internal/net/sf/proguard/proguard-gradle/4.10/proguard-gradle-4.10-sources.jar!/proguard/gradle/ProGuardTask.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/LintGradleProject.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/variant/ApplicationVariantData.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/variant/ApkVariantData.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/dependency/VariantDependencies.groovy">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/BasePlugin.groovy">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/builder-model/src/main/java/com/android/builder/model/Dependencies.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="jar:///usr/share/java/gradle/lib/gradle-core-1.11.jar!/org/gradle/api/tasks/VerificationTask.class">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.10676157" vertical-offset="0" max-vertical-offset="843">
          <caret line="6" column="17" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/tasks/AndroidTestTask.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.53979236" vertical-offset="0" max-vertical-offset="867">
          <caret line="26" column="49" selection-start-line="26" selection-start-column="49" selection-end-line="26" selection-end-column="49" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/tasks/AndroidReportTask.groovy">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/builder/src/main/java/com/android/builder/testing/ConnectedDevice.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/builder/src/main/java/com/android/builder/testing/TestRunner.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="216" max-vertical-offset="900">
          <caret line="60" column="54" selection-start-line="60" selection-start-column="41" selection-end-line="60" selection-end-column="54" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ddmlib/src/main/java/com/android/ddmlib/Log.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="5850">
          <caret line="16" column="8" selection-start-line="16" selection-start-column="8" selection-end-line="16" selection-end-column="26" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/builder/src/main/java/com/android/builder/testing/SimpleTestRunner.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="324" max-vertical-offset="1818">
          <caret line="55" column="47" selection-start-line="55" selection-start-column="47" selection-end-line="55" selection-end-column="47" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/tasks/DeviceProviderInstrumentTestTask.groovy">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="270" max-vertical-offset="1494">
          <caret line="65" column="68" selection-start-line="65" selection-start-column="48" selection-end-line="65" selection-end-column="68" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/changelog.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.33274338" vertical-offset="5536" max-vertical-offset="6264">
          <caret line="318" column="8" selection-start-line="318" selection-start-column="8" selection-end-line="318" selection-end-column="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/tests/basic/build.gradle">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="568" max-vertical-offset="2106">
          <caret line="42" column="8" selection-start-line="42" selection-start-column="8" selection-end-line="42" selection-end-column="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/builder/src/main/java/com/android/builder/testing/TestData.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-0.4141593" vertical-offset="378" max-vertical-offset="954">
          <caret line="26" column="17" selection-start-line="26" selection-start-column="17" selection-end-line="26" selection-end-column="17" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/api/ApplicationVariantImpl.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="65" max-vertical-offset="846">
          <caret line="31" column="77" selection-start-line="31" selection-start-column="77" selection-end-line="31" selection-end-column="77" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/api/ApplicationVariant.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="414">
          <caret line="23" column="49" selection-start-line="23" selection-start-column="49" selection-end-line="23" selection-end-column="49" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/api/BaseVariant.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="3665" max-vertical-offset="4230">
          <caret line="46" column="17" selection-start-line="46" selection-start-column="17" selection-end-line="46" selection-end-column="17" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/dsl/ProductFlavorDsl.groovy">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="216" max-vertical-offset="2322">
          <caret line="44" column="35" selection-start-line="44" selection-start-column="35" selection-end-line="44" selection-end-column="35" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.gradle/wrapper/dists/gradle-1.11-bin/4h5v8877arc3jhuqbm3osbr7o7/gradle-1.11/lib/gradle-base-services-1.11.jar!/org/gradle/internal/reflect/Instantiator.class">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="108" max-vertical-offset="252">
          <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/api/ApkVariant.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="1674">
          <caret line="35" column="40" selection-start-line="35" selection-start-column="40" selection-end-line="35" selection-end-column="40" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/variant/TestVariantData.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.31918505" vertical-offset="82" max-vertical-offset="810">
          <caret line="34" column="36" selection-start-line="34" selection-start-column="36" selection-end-line="34" selection-end-column="36" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/VariantManager.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.5500849" vertical-offset="0" max-vertical-offset="10188">
          <caret line="70" column="27" selection-start-line="70" selection-start-column="27" selection-end-line="70" selection-end-column="27" />
          <folding>
            <element signature="e#5918#5945#0" expanded="true" />
            <element signature="e#16272#16287#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/variant/VariantFactory.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.7249575" vertical-offset="167" max-vertical-offset="756">
          <caret line="52" column="26" selection-start-line="52" selection-start-column="26" selection-end-line="52" selection-end-column="26" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/builder/src/test/java/com/android/builder/VariantConfigurationTest.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="1.327674" vertical-offset="1054" max-vertical-offset="2610">
          <caret line="132" column="43" selection-start-line="132" selection-start-column="43" selection-end-line="132" selection-end-column="43" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/variant/BaseVariantData.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-1.8828523" vertical-offset="1811" max-vertical-offset="2538">
          <caret line="82" column="13" selection-start-line="82" selection-start-column="13" selection-end-line="82" selection-end-column="13" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/builder-model/src/main/java/com/android/builder/model/ProductFlavor.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="1748" max-vertical-offset="2754">
          <caret line="127" column="124" selection-start-line="127" selection-start-column="0" selection-end-line="127" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/builder/src/test/java/com/android/builder/DefaultProductFlavorTest.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="632" max-vertical-offset="1746">
          <caret line="65" column="57" selection-start-line="65" selection-start-column="57" selection-end-line="65" selection-end-column="57" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/builder/src/main/java/com/android/builder/DefaultProductFlavor.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="362" max-vertical-offset="6804">
          <caret line="54" column="34" selection-start-line="54" selection-start-column="0" selection-end-line="54" selection-end-column="0" />
          <folding>
            <element signature="e#9241#9257#0" expanded="true" />
            <element signature="e#10115#10116#0" expanded="true" />
            <element signature="e#10170#10171#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle/src/main/groovy/com/android/build/gradle/internal/model/ProductFlavorImpl.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="686" max-vertical-offset="2934">
          <caret line="74" column="108" selection-start-line="74" selection-start-column="95" selection-end-line="74" selection-end-column="95" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/tests/3rdPartyTests/buildSrc/src/main/java/com/android/tests/basic/buildscript/FakeDevice.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-38.08" vertical-offset="344" max-vertical-offset="2106">
          <caret line="90" column="8" selection-start-line="90" selection-start-column="8" selection-end-line="90" selection-end-column="8" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/gradle-model/src/test/java/com/android/build/gradle/model/AndroidProjectTest.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="7507" max-vertical-offset="23742">
          <caret line="483" column="23" selection-start-line="483" selection-start-column="23" selection-end-line="483" selection-end-column="23" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/builder/src/main/java/com/android/builder/VariantConfiguration.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="14121" max-vertical-offset="27324">
          <caret line="875" column="21" selection-start-line="875" selection-start-column="21" selection-end-line="875" selection-end-column="21" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build-system/builder/src/main/java/com/android/builder/internal/testing/SimpleTestCallable.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="1414" max-vertical-offset="2826">
          <caret line="118" column="0" selection-start-line="118" selection-start-column="0" selection-end-line="118" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ddmlib/src/main/java/com/android/ddmlib/testrunner/RemoteAndroidTestRunner.java">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.33208954" vertical-offset="2720" max-vertical-offset="4068">
          <caret line="213" column="42" selection-start-line="213" selection-start-column="42" selection-end-line="213" selection-end-column="42" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
</project>

